% describe the schema of sources and views
source tracks1('TRACK':string,'DATE':int,'RATING':int,'ALBUM':string,'QUANTITY':int).
view tracks2('TRACK':string,'RATING':int,'ALBUM':string,'QUANTITY':int).

% view definition:
% tracks2(T,R,A,Q) :- tracks1(T,_,R,A,Q).

% rule for deletion from tracks1
-tracks1(TRACK,DATE,RATING,ALBUM,QUANTITY) :- tracks1(TRACK,DATE,RATING,ALBUM,QUANTITY),
    not tracks2(TRACK,RATING,ALBUM,QUANTITY).

%rule for insertion to tracks1

% after deleting one tuple, we need to insert new one, however, 
%the view tracks2 does not have the column DATE, we need to found a value for this column. 
%One idea is finding it from the old tuples in the source tracks1, 
%we can find the DATE if it is determined by other attributes, 
%suppose that DATE is determined by (TRACK,ALBUM), then we can write a rule as follows:

+tracks1(TRACK,DATE,RATING,ALBUM,QUANTITY) :- tracks2(TRACK,RATING,ALBUM,QUANTITY),
    not tracks1(TRACK,_,RATING,ALBUM,QUANTITY), tracks1(TRACK,DATE,_,ALBUM,_).

% But we need consider the case when we do not find the column DATE in the source tracks1. 
%In this case we can fill the column DATE with a defaul value such as NULL as follows:

+tracks1(TRACK,2018,RATING,ALBUM,QUANTITY) :- tracks2(TRACK,RATING,ALBUM,QUANTITY),
    not tracks1(TRACK,_,_,ALBUM,_).